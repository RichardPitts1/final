{"version":3,"file":"static/webpack/static/development/pages/sell.js.0d7934f30b949c5cb10c.hot-update.js","sources":["webpack:///./components/CreateItem.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\n// Need to add a method on our createitem component that is going to handle the uploading of all of our images\n\nconst CREATE_ITEM_MUTATION = gql`\n    mutation CREATE_ITEM_MUTATION(\n            $title: String!\n            $description: String!\n            $price: Int!\n            $image: String\n            $largeImage: String\n        ) {\n            createItem(\n            title: $title\n            description: $description\n            price: $price\n            image: $image\n            largeImage: $largeImage\n        ) {\n            id\n        }\n    }\n`;\n\nexport default class CreateItem extends Component {\n    state = {\n        title: 'Type your title here',\n        description: '',\n        image: '',\n        largeImage: '',\n        price: 0,\n    };\n    handleChange = (event) => {\n        console.log( { name, type, value } );\n        const { name, type, value } = event.target;\n        const val = type === 'number' ? parseFloat(value) : value;\n        this.setState({ [name]: val})\n    };\n\n    // Here is the method to connect with Cloudinary\n\n    // Whenever someone selects an input item from the box, it triggers this method \n\n    uploadFile = async (e) => {\n        console.log('uploading file...')\n        const files = e.target.files\n        const data = new FormData();\n        data.append('file', files[0])\n        data.append('upload_preset','projectmusa');\n\n        const res = await fetch('https://api.cloudinary.com/v1_1/project-musa/image/upload', {\n            method: 'POST',\n            body: data\n        });\n        const file = await res.json();\n        console.log(file);\n        this.setState({\n            image: file.secure_url,\n            largeImage: file.eager[0].secure_url\n        })\n    };\n\n    // Only in React can you have a self closing text area tag.\n    // Just like query, the only child of a mutation can be a function\n    // The fieldset disabled means that if its loading, it will be greyed out\n    // The aria-busy does the animation bar for us, edit this in the form.js file wher ethe animation is applied\n    // This is one of the advantages of Apollo, it flips the loading states on and off such that we don't have to use booleans.\n  render() {\n    return (\n        <Mutation mutation={CREATE_ITEM_MUTATION} variables={this.state}>\n            {(createItem, { loading, error }) => (\n      <Form \n        onSubmit={async e => {\n            e.preventDefault();\n            console.log(this.state);\n            const res = await createItem();\n            // change item to the single item page\n            console.log(res);\n            Router.push({\n                pathname: '/item',\n                query: { id: res.data.createItem.id },\n            });\n        }}\n  >\n        <Error error={error} />\n        <fieldset disabled={loading} aria-busy={loading}>\n        <br></br>\n            <label htmlFor=\"title\">\n            Title \n            <input \n                type=\"text\" \n                id=\"title\" \n                name=\"title\" \n                placeholder=\"Title\" \n                required \n                value={this.state.title}\n                onChange={this.handleChange}\n                />\n            </label>\n\n            <label htmlFor=\"price\">\n            Price \n            <input \n                type=\"number\" \n                id=\"price\" \n                name=\"price\" \n                placeholder=\"Price\" \n                required \n                value={this.state.price}\n                onChange={this.handleChange}\n                />\n            </label>\n\n            <label htmlFor=\"description\">\n            Description \n            <textarea \n                type=\"number\" \n                id=\"description\" \n                name=\"description\" \n                placeholder=\"Describe the item\" \n                required \n                value={this.state.description}\n                onChange={this.handleChange}\n                />\n                </label>\n\n                <label htmlFor=\"file\">\n        Image \n        <input \n            type=\"file\" \n            id=\"file\" \n            name=\"file\" \n            placeholder=\"Upload PNG or JPEG\" \n            required \n            onChange={this.uploadFile}\n            />\n            {this.state.image && (\n            <img width=\"200\" src={this.state.image} \n            alt=\"Upload Preview\" />\n            )}\n        </label>\n\n\n                <button type=\"submit\">Submit</button>\n            </fieldset>\n        </Form>\n      )}\n      </Mutation>\n    );\n  }\n}\n\nexport { CREATE_ITEM_MUTATION }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAmBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;;;;;;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAQA;AACA;AAFA;AACA;AARA;AAOA;AAPA;AAAA;AACA;AADA;AAWA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAazEA;AA+EA;;;;AA7HA;AACA;AADA;;;;;A","sourceRoot":""}